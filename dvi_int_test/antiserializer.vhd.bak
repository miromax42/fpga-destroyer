-- antiserializerGUN----------------------------
-------------------------------------------------
LIBRARY ieee;
USE ieee.std_logic_1164.all;
 entity antiserializer is
   port (
 	clk250: in std_logic;
  err    : in std_logic;
	din: in std_logic;
	dout: out std_logic_vector(9 downto 0)
   );
 end entity;
 architecture rtl of antiserializer is

 	signal internal:std_logic_vector(9 downto 0);

 begin
	 serial : process(clk250)
	 variable count:integer range 0 to 9:=0;
   variable c_err:integer range 0 to 9:=0;

	 begin
	 	if rising_edge(clk250) then
			count := count + 1;
      if err='1' then
        c_err:=c_err+1;
        if c_err=9 THEN
          c_err:=0;
          if count=9 then
            count:=0;
          else
            count:=count+1;
          end if;
        end if;
      end if;
			IF (count = 9) THEN
				internal(count) <= din;
			ELSIF (count = 10) THEN
				count := 0;
			END IF;
			dout  <= internal;
		end if;
	end PROCESS;
 end architecture;

-----Serializer:---------------------------------
LIBRARY ieee;
USE ieee.std_logic_1164.all;
-------------------------------------------------
ENTITY serializer IS
PORT(clk250 : IN  STD_LOGIC;
		 din    : IN  STD_LOGIC_VECTOR(9 DOWNTO 0);
		 dout   : OUT STD_LOGIC);
END serializer;
-------------------------------------------------
ARCHITECTURE serializer OF serializer IS
SIGNAL internal : STD_LOGIC_VECTOR(9 DOWNTO 0);
BEGIN
PROCESS(clk250)
	VARIABLE count : INTEGER RANGE 0 TO 10;
BEGIN
	IF (clk250'EVENT AND clk250 = '1') THEN
		count := count + 1;
		IF (count = 9) THEN
			internal <= din;
		ELSIF (count = 10) THEN
			count := 0;
		END IF;
		dout  <= internal(count);
	END IF;
END PROCESS;
END serializer;
-------------------------------------------------
